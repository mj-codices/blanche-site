@import "tailwindcss";

:root {
  /* setting the variable */
  --black: #171717;
  --white: #ffffff;
  --grey: #88807b;
  --accent: #e9905a;
  /* using the variable */
  --background: var(--white);
  --foreground: var(--black);
}

@font-face {
  font-family: myFirstFont;
  src: url(../../public/fonts/URWGothic-Book.otf);
}

@font-face {
  font-family: myFirstFontBold;
  src: url(../../public/fonts/URWGothic-Demi.otf);
  text-shadow: 1px 1px 1px black;
}

@font-face {
  font-family: myFirstFontOblique;
  src: url(../../public/fonts/URWGothic-DemiOblique.otf);
}

body {
  background: var(--background);
}

.bold-action-text {
  font-family: myFirstFontBold;
  text-decoration: none;
}

.fredoka {
  font-family: "Fredoka", sans-serif;
  font-optical-sizing: auto;
  font-weight: 700;
  font-style: normal;
  font-variation-settings: "wdth" 98.1;
}

@keyframes waveMove {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

.wave {
  @apply absolute bottom-0 h-16 w-[200%];
  animation: waveMove 12s linear infinite;
}


@media (max-width: 100vw) {
  .wave {
    @apply h-20 w-[300%];
    animation: waveMove 10s linear infinite;
  }

  .wave path {
    d: path(
      "M0,50 C150,80 300,20 450,50 C600,80 750,20 900,50 C1050,80 1200,20 1350,50 C1500,80 1650,20 1800,50 V100 H0 Z"
    );
  }
}



@media (max-width: 766px) {
  .writing-vertical-rl {
    writing-mode: vertical-rl; /* or horizontal-tb if you want to be specific */
  }

  .button-text-upright {
    text-orientation: initial;
  }
}


.custom-input::placeholder {
  color: #6b7280; /* Tailwind gray-500 */
  transition: color 0.8s ease;
}

.custom-input:hover::placeholder,
.custom-input:focus::placeholder {
  color: #a67b5b; /* Your desired hover color */
}

.custom-input1::placeholder {
  color: #6b7280;
  transition: color 0.8s ease;
}

.custom-input1:hover::placeholder, 
.custom-input1:focus::placeholder {
  color: #c7936d;
}

.custom-input2::placeholder {
  color: #6b7280;
  transition: color 0.8s ease;
}

.custom-input2:hover::placeholder, 
.custom-input2:focus::placeholder {
  color: #f6b88b;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
}

.grecaptcha-badge {
  visibility: hidden;
}

.star-glow {
  filter: drop-shadow(0 2px 10px rgba(233, 150, 90, 0.6));
    overflow: visible;
}


.plane-glow {
  filter: drop-shadow(0 2px 10px rgba(233, 150, 90, 0.6));
    overflow: visible;
}

@keyframes twinkle {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
}

.star {
  transform-origin: center;
  transform-box: fill-box; /* Important for SVGs */
}

/* Group A stars pulse in sync */
.star.twinkle-a {
  animation: twinkle 2s ease-in-out infinite;
}

/* Group B star (the odd one out) pulses out of phase */
.star.twinkle-b {
  animation: twinkle 2s ease-in-out infinite;
  animation-delay: 1s;
}